//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""184c3f61-b59d-4c5b-8364-378b4b6df672"",
            ""actions"": [
                {
                    ""name"": ""SpeedIncrease"",
                    ""type"": ""Value"",
                    ""id"": ""fb2baa5f-f6f1-4faf-9053-ae3e503b9cb4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PoleGrab"",
                    ""type"": ""Value"",
                    ""id"": ""16a1bdeb-e24c-4c37-aee9-bcc1699ab575"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ItemGrab"",
                    ""type"": ""Value"",
                    ""id"": ""3627d632-c6c2-4e34-8487-f724d05cfcf5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5835b9db-b4f9-4570-b3b7-b96975d1c5dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ArmMovement"",
                    ""type"": ""Value"",
                    ""id"": ""09a31375-3962-4559-953c-7dde326c1c32"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ArmMovementMouse"",
                    ""type"": ""Value"",
                    ""id"": ""293b3b26-9985-4dc7-8148-04224f41d4ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""10a85b3c-efee-42a9-8b3a-617965a3cc26"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""500ea93f-44a0-4d26-ad15-5a214192f5bb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cad632cf-989a-4085-abd5-fa323b195fe4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae16b3e7-983b-41dd-9f6a-21d32c9ba8c5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4fda088-7cd6-4aef-b00b-0bbfd297a13b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31041ec4-08a3-475f-81e8-186da57c2139"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dec3cb9-b97b-4ea8-bb2e-116f2264b4c2"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemGrab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcc6541c-7fc2-41d2-b431-7b74c0a67c05"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""71986bb2-ee51-4c12-903f-cc20ceffa123"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71559ee8-77d2-4667-b630-8e4452c8d7c7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""577b6aea-42c5-4d9e-a7c8-d73b71e776dd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eaba3971-d35e-49ec-a4bf-b8e527a878b4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b6ab22e6-376e-4f19-91cd-f1917b0b7a2d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""34c72032-4d8c-44ab-a779-5d6f1940eb64"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8aedd422-f925-4acd-b8f5-66752c339586"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmMovementMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_SpeedIncrease = m_Gameplay.FindAction("SpeedIncrease", throwIfNotFound: true);
        m_Gameplay_PoleGrab = m_Gameplay.FindAction("PoleGrab", throwIfNotFound: true);
        m_Gameplay_ItemGrab = m_Gameplay.FindAction("ItemGrab", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_ArmMovement = m_Gameplay.FindAction("ArmMovement", throwIfNotFound: true);
        m_Gameplay_ArmMovementMouse = m_Gameplay.FindAction("ArmMovementMouse", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_SpeedIncrease;
    private readonly InputAction m_Gameplay_PoleGrab;
    private readonly InputAction m_Gameplay_ItemGrab;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_ArmMovement;
    private readonly InputAction m_Gameplay_ArmMovementMouse;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpeedIncrease => m_Wrapper.m_Gameplay_SpeedIncrease;
        public InputAction @PoleGrab => m_Wrapper.m_Gameplay_PoleGrab;
        public InputAction @ItemGrab => m_Wrapper.m_Gameplay_ItemGrab;
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @ArmMovement => m_Wrapper.m_Gameplay_ArmMovement;
        public InputAction @ArmMovementMouse => m_Wrapper.m_Gameplay_ArmMovementMouse;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @SpeedIncrease.started += instance.OnSpeedIncrease;
            @SpeedIncrease.performed += instance.OnSpeedIncrease;
            @SpeedIncrease.canceled += instance.OnSpeedIncrease;
            @PoleGrab.started += instance.OnPoleGrab;
            @PoleGrab.performed += instance.OnPoleGrab;
            @PoleGrab.canceled += instance.OnPoleGrab;
            @ItemGrab.started += instance.OnItemGrab;
            @ItemGrab.performed += instance.OnItemGrab;
            @ItemGrab.canceled += instance.OnItemGrab;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @ArmMovement.started += instance.OnArmMovement;
            @ArmMovement.performed += instance.OnArmMovement;
            @ArmMovement.canceled += instance.OnArmMovement;
            @ArmMovementMouse.started += instance.OnArmMovementMouse;
            @ArmMovementMouse.performed += instance.OnArmMovementMouse;
            @ArmMovementMouse.canceled += instance.OnArmMovementMouse;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @SpeedIncrease.started -= instance.OnSpeedIncrease;
            @SpeedIncrease.performed -= instance.OnSpeedIncrease;
            @SpeedIncrease.canceled -= instance.OnSpeedIncrease;
            @PoleGrab.started -= instance.OnPoleGrab;
            @PoleGrab.performed -= instance.OnPoleGrab;
            @PoleGrab.canceled -= instance.OnPoleGrab;
            @ItemGrab.started -= instance.OnItemGrab;
            @ItemGrab.performed -= instance.OnItemGrab;
            @ItemGrab.canceled -= instance.OnItemGrab;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @ArmMovement.started -= instance.OnArmMovement;
            @ArmMovement.performed -= instance.OnArmMovement;
            @ArmMovement.canceled -= instance.OnArmMovement;
            @ArmMovementMouse.started -= instance.OnArmMovementMouse;
            @ArmMovementMouse.performed -= instance.OnArmMovementMouse;
            @ArmMovementMouse.canceled -= instance.OnArmMovementMouse;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnSpeedIncrease(InputAction.CallbackContext context);
        void OnPoleGrab(InputAction.CallbackContext context);
        void OnItemGrab(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnArmMovement(InputAction.CallbackContext context);
        void OnArmMovementMouse(InputAction.CallbackContext context);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""184c3f61-b59d-4c5b-8364-378b4b6df672"",
            ""actions"": [
                {
                    ""name"": ""SpeedIncrease"",
                    ""type"": ""Value"",
                    ""id"": ""fb2baa5f-f6f1-4faf-9053-ae3e503b9cb4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PoleGrabRight"",
                    ""type"": ""Value"",
                    ""id"": ""16a1bdeb-e24c-4c37-aee9-bcc1699ab575"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PoleGrabLeft"",
                    ""type"": ""Value"",
                    ""id"": ""c0955d46-6ad3-4ae5-97a8-2bc73457f187"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5835b9db-b4f9-4570-b3b7-b96975d1c5dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CanonAim"",
                    ""type"": ""Value"",
                    ""id"": ""09a31375-3962-4559-953c-7dde326c1c32"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CanonShoot"",
                    ""type"": ""Value"",
                    ""id"": ""1263d790-2233-42f2-bb20-e7d998b43cea"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""10a85b3c-efee-42a9-8b3a-617965a3cc26"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""500ea93f-44a0-4d26-ad15-5a214192f5bb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedIncrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae16b3e7-983b-41dd-9f6a-21d32c9ba8c5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4fda088-7cd6-4aef-b00b-0bbfd297a13b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcc6541c-7fc2-41d2-b431-7b74c0a67c05"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""71986bb2-ee51-4c12-903f-cc20ceffa123"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71559ee8-77d2-4667-b630-8e4452c8d7c7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""577b6aea-42c5-4d9e-a7c8-d73b71e776dd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eaba3971-d35e-49ec-a4bf-b8e527a878b4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b6ab22e6-376e-4f19-91cd-f1917b0b7a2d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""34c72032-4d8c-44ab-a779-5d6f1940eb64"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""389db2ce-3add-4bb7-853b-85b2398c70b0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""88fa06cf-0482-4d81-b32b-780db0a02c98"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4cec3e37-c994-4028-92dd-6fb7b4b62436"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8e79dc95-d198-4a51-ada9-0d31951838e9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""66662dc1-54ca-4acc-b821-c98ade53403b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""877f40a1-b820-452c-9a6b-fca8e36b7257"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c0afbf7-6b2f-4345-a1f0-67d6a4b49845"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoleGrabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52c3059e-b5b1-42f4-bdb7-459d1d974190"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc543ae3-ea57-4df6-8b6d-a1371bc0aea2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c0f8295-b6ff-4744-a160-33a6989685d8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CanonShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_SpeedIncrease = m_Gameplay.FindAction("SpeedIncrease", throwIfNotFound: true);
        m_Gameplay_PoleGrabRight = m_Gameplay.FindAction("PoleGrabRight", throwIfNotFound: true);
        m_Gameplay_PoleGrabLeft = m_Gameplay.FindAction("PoleGrabLeft", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_CanonAim = m_Gameplay.FindAction("CanonAim", throwIfNotFound: true);
        m_Gameplay_CanonShoot = m_Gameplay.FindAction("CanonShoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_SpeedIncrease;
    private readonly InputAction m_Gameplay_PoleGrabRight;
    private readonly InputAction m_Gameplay_PoleGrabLeft;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_CanonAim;
    private readonly InputAction m_Gameplay_CanonShoot;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpeedIncrease => m_Wrapper.m_Gameplay_SpeedIncrease;
        public InputAction @PoleGrabRight => m_Wrapper.m_Gameplay_PoleGrabRight;
        public InputAction @PoleGrabLeft => m_Wrapper.m_Gameplay_PoleGrabLeft;
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @CanonAim => m_Wrapper.m_Gameplay_CanonAim;
        public InputAction @CanonShoot => m_Wrapper.m_Gameplay_CanonShoot;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @SpeedIncrease.started += instance.OnSpeedIncrease;
            @SpeedIncrease.performed += instance.OnSpeedIncrease;
            @SpeedIncrease.canceled += instance.OnSpeedIncrease;
            @PoleGrabRight.started += instance.OnPoleGrabRight;
            @PoleGrabRight.performed += instance.OnPoleGrabRight;
            @PoleGrabRight.canceled += instance.OnPoleGrabRight;
            @PoleGrabLeft.started += instance.OnPoleGrabLeft;
            @PoleGrabLeft.performed += instance.OnPoleGrabLeft;
            @PoleGrabLeft.canceled += instance.OnPoleGrabLeft;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @CanonAim.started += instance.OnCanonAim;
            @CanonAim.performed += instance.OnCanonAim;
            @CanonAim.canceled += instance.OnCanonAim;
            @CanonShoot.started += instance.OnCanonShoot;
            @CanonShoot.performed += instance.OnCanonShoot;
            @CanonShoot.canceled += instance.OnCanonShoot;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @SpeedIncrease.started -= instance.OnSpeedIncrease;
            @SpeedIncrease.performed -= instance.OnSpeedIncrease;
            @SpeedIncrease.canceled -= instance.OnSpeedIncrease;
            @PoleGrabRight.started -= instance.OnPoleGrabRight;
            @PoleGrabRight.performed -= instance.OnPoleGrabRight;
            @PoleGrabRight.canceled -= instance.OnPoleGrabRight;
            @PoleGrabLeft.started -= instance.OnPoleGrabLeft;
            @PoleGrabLeft.performed -= instance.OnPoleGrabLeft;
            @PoleGrabLeft.canceled -= instance.OnPoleGrabLeft;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @CanonAim.started -= instance.OnCanonAim;
            @CanonAim.performed -= instance.OnCanonAim;
            @CanonAim.canceled -= instance.OnCanonAim;
            @CanonShoot.started -= instance.OnCanonShoot;
            @CanonShoot.performed -= instance.OnCanonShoot;
            @CanonShoot.canceled -= instance.OnCanonShoot;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnSpeedIncrease(InputAction.CallbackContext context);
        void OnPoleGrabRight(InputAction.CallbackContext context);
        void OnPoleGrabLeft(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnCanonAim(InputAction.CallbackContext context);
        void OnCanonShoot(InputAction.CallbackContext context);
    }
}
